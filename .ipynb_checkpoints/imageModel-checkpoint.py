{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bf370bba",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from pathlib import Path\n",
    "import os.path\n",
    "import matplotlib.pyplot as plt\n",
    "import tensorflow as tf\n",
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
    "from tensorflow.keras import layers,Sequential\n",
    "import tensorflow as tf\n",
    "\n",
    "\n",
    "dir_ = Path('/train')\n",
    "train_filepaths = list(dir_.glob(r'**/*.jpg'))\n",
    "\n",
    "dir_ = Path('/test')\n",
    "test_filepaths = list(dir_.glob(r'**/*.jpg'))\n",
    "\n",
    "train_datagen = ImageDataGenerator(rescale = 1./255,\n",
    "                                   shear_range = 0.2,\n",
    "                                   zoom_range = 0.2,\n",
    "                                   rotation_range=20,\n",
    "                                   horizontal_flip = True)\n",
    "\n",
    "\n",
    "training_set=train_datagen.flow_from_directory(\n",
    "    directory=r\"/training\",\n",
    "    target_size=(224, 224),\n",
    "    color_mode=\"rgb\",\n",
    "    batch_size=10,\n",
    "    class_mode=\"binary\",\n",
    "    shuffle=True,\n",
    "    seed=0)\n",
    "\n",
    "\n",
    "test_datagen = ImageDataGenerator(rescale = 1./255,validation_split=0.1)\n",
    "test_set1 = test_datagen.flow_from_directory('/testing',\n",
    "                                            target_size=(224,224),\n",
    "                                            batch_size=10,\n",
    "                                            class_mode='binary',\n",
    "                                            subset='validation', \n",
    "                                            seed=0,\n",
    "                                            shuffle=False)\n",
    "input_shape=training_set.image_shape\n",
    "\n",
    "IMG_SHAPE = (224,224,3)\n",
    "base_model = tf.keras.applications.MobileNetV2(input_shape=IMG_SHAPE,\n",
    "                                               include_top=False, \n",
    "                                               weights='imagenet')\n",
    "base_model.trainable = False\n",
    "model = tf.keras.Sequential([\n",
    "  base_model,\n",
    "  tf.keras.layers.Conv2D(128, 3, activation='relu'),\n",
    "  tf.keras.layers.Dropout(0.2),\n",
    "  tf.keras.layers.GlobalAveragePooling2D(),\n",
    "  tf.keras.layers.Dense(1, activation='sigmoid')])\n",
    "\n",
    "adam = tf.keras.optimizers.Adam(lr=0.001, beta_1=0.9, beta_2=0.999, epsilon=None, decay=0.0, amsgrad=False)\n",
    "model.compile(optimizer=adam,loss='binary_crossentropy',metrics=['accuracy'])\n",
    "model.fit_generator(training_set,epochs =2000,validation_data=test_set1,verbose=2)\n",
    "loss,accuracy=model.evaluate(test_set1)\n",
    "\n",
    "print(\"accuracy=\",accuracy)\n",
    "print(\"loss=\"loss)\n",
    "\n",
    "model.save('/dogcatModel/document.h5')\n",
    "print(\"model saved\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
